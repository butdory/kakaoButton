{"version":3,"sources":["KakaoShareButton.js","Layout.js","App.js","reportWebVitals.js","index.js"],"names":["KakaoShareButton","useEffect","createKakaoButton","window","Kakao","kakao","isInitialized","init","process","Link","createDefaultButton","container","objectType","content","title","description","imageUrl","link","mobileWebUrl","webUrl","social","likeCount","commentCount","sharedCount","buttons","className","id","src","alt","Layout","script","document","createElement","async","body","appendChild","removeChild","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wKAsDeA,G,WApDU,WACrBC,qBAAU,WACNC,MACL,IAEH,IAAMA,EAAoB,WAEtB,GAAIC,OAAOC,MAAO,CAClB,IAAMC,EAAQF,OAAOC,MAEhBC,EAAMC,iBAEPD,EAAME,KAAKC,oCAEfH,EAAMI,KAAKC,oBAAoB,CAE3BC,UAAW,kBACXC,WAAY,OACZC,QAAS,CACTC,MAAO,mCACPC,YAAa,+FACbC,SAAU,YACNC,KAAM,CACFC,aAAc,0CACdC,OAAQ,4CAEZC,OAAQ,CACRC,UAAW,GACXC,aAAc,GACdC,YAAa,KAEbC,QAAS,CAAC,CACVV,MAAO,kCACHG,KAAM,CACFC,aAAc,0CACdC,OAAQ,4CACZ,CACJL,MAAO,kCACPG,KAAM,CACFC,aAAc,0CACdC,OAAQ,iDAGxB,OACI,qBAAKM,UAAU,qBAAf,SAEA,wBAAQC,GAAG,iBAAX,SACI,qBAAKC,IAAI,mBAAmBC,IAAI,2BC3BzBC,EAnBA,WAaX,OAXA5B,qBAAU,WACN,IAAM6B,EAASC,SAASC,cAAc,UAK1C,OAJIF,EAAOH,IAAM,+CACbG,EAAOG,OAAQ,EACfF,SAASG,KAAKC,YAAYL,GAEvB,WACHC,SAASG,KAAKE,YAAYN,MAE3B,IAGC,qBAAKL,UAAU,SAAf,SACI,cAAC,EAAD,OCTGY,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,K","file":"static/js/main.1fc17235.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst KakaoShareButton = () => {\r\n    useEffect(() => {\r\n        createKakaoButton()\r\n}, [])\r\n\r\nconst createKakaoButton = () => {\r\n    // kakao sdk script이 정상적으로 불러와졌으면 window.Kakao로 접근이 가능합니다\r\n    if (window.Kakao) {\r\n    const kakao = window.Kakao\r\n    // 중복 initialization 방지\r\n    if (!kakao.isInitialized()) {\r\n        // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\r\n        kakao.init(process.env.REACT_APP_KAKAO_KEY)\r\n    }\r\n    kakao.Link.createDefaultButton({\r\n        // Render 부분 id=kakao-link-btn 을 찾아 그부분에 렌더링을 합니다\r\n        container: '#kakao-link-btn',\r\n        objectType: 'feed',\r\n        content: {\r\n        title: '한강 물 온도',\r\n        description: '#리액트 #한강물 한 모금 #한강물 온도',\r\n        imageUrl: 'IMAGE_URL', // i.e. process.env.FETCH_URL + '/logo.png'\r\n            link: {\r\n                mobileWebUrl: \"https://butdory.github.io/hanriver-temp\",\r\n                webUrl: \"https://butdory.github.io/hanriver-temp\",\r\n            },},\r\n            social: {\r\n            likeCount: 77,\r\n            commentCount: 55,\r\n            sharedCount: 333,\r\n            },\r\n            buttons: [{\r\n            title: '웹으로 보기',\r\n                link: {\r\n                    mobileWebUrl: \"https://butdory.github.io/hanriver-temp\",\r\n                    webUrl: \"https://butdory.github.io/hanriver-temp\",\r\n            },},{\r\n            title: '앱으로 보기',\r\n            link: {\r\n                mobileWebUrl: \"https://butdory.github.io/hanriver-temp\",\r\n                webUrl: \"https://butdory.github.io/hanriver-temp\",\r\n},},],})}}  \r\n\r\nreturn (\r\n    <div className=\"kakao-share-button\">\r\n      {/* Kakao share button */}\r\n    <button id=\"kakao-link-btn\">\r\n        <img src=\"/icons/kakao.png\" alt=\"kakao-share-icon\" />\r\n    </button>\r\n    </div>\r\n)}\r\n\r\nexport default KakaoShareButton","import React, { useEffect } from 'react'\r\nimport KakaoShareButton from './KakaoShareButton'\r\n\r\nconst Layout = () => {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script')\r\n        script.src = 'https://developers.kakao.com/sdk/js/kakao.js'\r\n        script.async = true\r\n        document.body.appendChild(script)\r\n\r\n    return () => {\r\n        document.body.removeChild(script)\r\n    }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"layout\">\r\n            <KakaoShareButton />\r\n        </div>\r\n    )\r\n}\r\nexport default Layout","import './App.css';\nimport Layout from './Layout';\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}